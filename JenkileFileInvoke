node('master') {
		stage ("Invoke Pipeline")
		  {
		
		    echo "Invoke Pipeline"
		    def previousBuild = Jenkins.instance.getItem('getBuildNumber').lastBuild.number
		    println previousBuild
		    jresult =    build ( job: 'getBuildNumber', parameters: [string(name: 'variable1', value: "from Pipeline") ],  propagate: false).result
		    if( jresult == 'FAILURE') {
		    	currentBuild = Jenkins.instance.getItem('getBuildNumber').lastBuild.number
		   	println "Smoke Job is  failed Buildnumber: $currentBuild"
		   	
		    	sh 'exit 1'
		   }
		   
		   }
			


		stage ("check")
		{
		  def lastBuild = Jenkins.instance.getItem('getBuildNumber').lastBuild.number

		  def lastSuccessfulBuild = Jenkins.instance.getItem('getBuildNumber').lastSuccessfulBuild.number
		print lastBuild
		print lastSuccessfulBuild
		if ( lastBuild != lastSuccessfulBuild) {
			echo "Smoke Test Failed"
			  currentBuild.result = 'FAILURE'
			  sh 'exit 1'
			
		}
		
		}
		
		
		stage ("Invoke Pipeline nxt")
		  {
	
		    echo "Running Next Stage"
			
		  }
		  
}
