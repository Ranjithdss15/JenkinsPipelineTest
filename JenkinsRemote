node('master') {

	stage ("Invoke Pipeline")
	  {
		def jenkinsURL = "35.168.32.83:8080"
		def jobName = "getBuildNumber"
		def user = "admin"
		def jenkinsToken = "11913b5a828895141297ffbb5fca801565"
		def variable1 = "testVar1"
		def variable2 = "testVar2"

		def previousBuild = sh(script: "curl -s http://${jenkinsURL}/job/${jobName}/lastBuild/buildNumber --user ${user}:${jenkinsToken}", returnStdout: true).trim() as Integer
		println("previousBuildNumber = ${previousBuild}")
		def currentBuild = previousBuild + 1
		println("currentBuildNumber = ${currentBuild}")
		//trigerring Job
	   	sh  "curl -X POST http://${jenkinsURL}/job/${jobName}/buildWithParameters?'variable1=${variable1}&variable_2=${variable2}' --user ${user}:${jenkinsToken}"
			

	while (true)
	{
		def getSucccessfulBuild = sh(script: "curl -s http://${jenkinsURL}/job/${jobName}/lastSuccessfulBuild/buildNumber --user ${user}:${jenkinsToken}", returnStdout: true).trim() as Integer
		def getFailedBuild = sh(script: "curl -s http://${jenkinsURL}/job/${jobName}/lastFailedBuild/buildNumber --user ${user}:${jenkinsToken}", returnStdout: true).trim() as Integer
		//println("currentBuild = ${currentBuild}")
		//println("getSucccessfulBuild = ${getSucccessfulBuild}")
	  	//println("getFailedBuild = ${getFailedBuild}")
		if(currentBuild == getSucccessfulBuild) {
			print "inside if"
			println("currentBuild = ${currentBuild}")
			println("lastSucccessfulBuild = ${getSucccessfulBuild}")
			println("lastFailedBuild = ${getFailedBuild}")
			print "Smoke Test Passed"
			break
			}
		else if (currentBuild == getFailedBuild)
		{
			print "inside else"
			println("currentBuild = ${currentBuild}")
			println("lastSucccessfulBuild = ${getSucccessfulBuild}")
			println("lastFailedBuild = ${getFailedBuild}")
			print "Smoke Test Failed"
			sh 'exit 1'
		}
		
	}


	}
	stage ("Next Stage") {
	print "Inside Next Stage"
	}
		  
}
